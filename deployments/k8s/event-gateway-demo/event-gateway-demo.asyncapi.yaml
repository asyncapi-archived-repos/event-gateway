asyncapi: '2.4.0'
info:
  title: AsyncAPI Event-Gateway demo API
  version: 1.0.0-alpha
  description: This API lets users interact with an instance of the [AsyncAPI Event-Gateway](https://github.com/asyncapi/event-gateway).
defaultContentType: application/json
servers:
  asyncapi-event-gateway-demo:
    url: 'event-gateway-demo.asyncapi.com:20472'
    protocol: kafka
    description: AsyncAPI [Event-Gateway](https://github.com/asyncapi/event-gateway) demo Kafka proxy. Expected messages are based on a small portion of the [StreetLights tutorial](https://bit.ly/asyncapi).
  asyncapi-event-gateway-demo-validation:
    url: 'event-gateway-demo.asyncapi.com:5000/ws'
    protocol: ws
    description: AsyncAPI [Event-Gateway](https://github.com/asyncapi/event-gateway) demo. Subscribe for Kafka proxy message validation errors.
  asyncapi-kafka-test:
    url: 'asyncapi-kafka-test-asyncapi-8f90.aivencloud.com:20472' # Kafka with 3 brokers.
    protocol: kafka-secure
    description: AsyncAPI Kafka test broker. Private.
channels:
  event-gateway-demo:
    description: Demo Kafka topic for asyncapi-event-gateway-demo server. Users can send their events to this topic and see how message validation happens on the fly based on this right AsyncAPI file by connecting to `event-gateway-demo-validation-events` channel (`asyncapi-event-gateway-demo-validation` ws server).
    x-servers: # Based on https://github.com/asyncapi/spec/pull/531
      - asyncapi-event-gateway-demo
    publish:
      message:
        $ref: '#/components/messages/lightMeasured'
  event-gateway-demo-validation-events:
    description: Validation errors are published here, so users can see how message validation happens on the fly based on this right AsyncAPI file.
    x-servers: # Based on https://github.com/asyncapi/spec/pull/531
      - asyncapi-event-gateway-demo-validation
    subscribe:
      message:
        $ref: '#/components/messages/invalidMessage'
  event-gateway-demo-validation:
    description: Validation errors are published to and consumed from it. AsyncAPI Event-gateway is the only user of this channel. It can be consumed and exposed via `event-gateway-demo-validation-events` channel (`asyncapi-event-gateway-demo-validation` ws server).
    x-servers: # Based on https://github.com/asyncapi/spec/pull/531
      - asyncapi-kafka-test
    subscribe:
      message:
        $ref: '#/components/messages/invalidMessage'
components:
  messages:
    # lightMeasured is copied from the Streetlights tutorial instead of using references due to a bug in parser-go: https://github.com/asyncapi/parser-go/issues/82
    lightMeasured:
      name: lightMeasured
      title: Light measured
      summary: Inform about environmental lighting conditions of a particular streetlight.
      contentType: application/json
      traits:
        - $ref: '#/components/messageTraits/commonHeaders'
      payload:
        $ref: "#/components/schemas/lightMeasuredPayload"
    invalidMessage:
      title: Invalid message
      summary: Message with a Validation Error.
      contentType: application/json
      payload:
        $ref: "#/components/schemas/sentMessage"
      headers:
        type: object
        properties:
          _asyncapi_eg_channel:
            type: string
            description: AsyncAPI Channel where the message was published to.
          _asyncapi_eg_validation_error:
            $ref: '#/components/schemas/validationError'
  schemas:
    sentMessage:
      type: object
      properties:
        UUID:
          type: string
          description: Unique identifier of message. I.e. Kafka message key.
        Payload:
          type: string
          description: Message value. I.e. Kafka message (base64).
      examples:
        - UUID: 'YXN5bmNhcGktd2FzLWhlcmU='
          Payload: 'eyJsdW1lbnMiOiAid2hhdGV2ZXIifQ=='
    validationError:
      type: object
      properties:
        ts:
          type: string
          description: RFC-3339 date-time. Date and time when the message was validated.
        errors:
          type: array
          description: Array of string. Validation errors.
          items:
            type: string
      examples:
        - ts: '2021-09-10T12:04:18:475203609Z'
          errors: [ 'lumens: Invalid type. Expected: integer, given: string' ]
    lightMeasuredPayload:
      type: object
      properties:
        lumens:
          type: integer
          minimum: 0
          description: Light intensity measured in lumens.
        sentAt:
          $ref: "#/components/schemas/sentAt"
    sentAt:
      type: string
      format: date-time
      description: Date and time when the message was sent.
  messageTraits:
    commonHeaders:
      headers:
        type: object
        properties:
          my-app-header:
            type: integer
            minimum: 0
            maximum: 100
